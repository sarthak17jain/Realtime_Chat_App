// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  name           String
  email          String    @unique
  password       String
  pic            String    @default("https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  messages       Message[]
  adminChats     Chat[]    @relation("AdminChats")
  groupChats     Chat[]    @relation("GroupChats")
}

model Message {
  id        String   @id @default(uuid()) @db.Uuid
  content   String
  sender    User     @relation(fields: [senderId], references: [id])
  senderId  Int
  chat      Chat     @relation("ChatMessages", fields: [chatId], references: [id], onDelete: Cascade)
  chatId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  latestMessageIn Chat?   @relation("LatestMessage")
  @@index([chatId])
}

model Chat {
  id              Int       @id @default(autoincrement())
  chatName        String
  isGroupChat     Boolean   @default(false)
  users           User[]    @relation("GroupChats")
  latestMessage   Message?  @relation("LatestMessage", fields: [latestMessageId], references: [id])
  latestMessageId String?   @db.Uuid @unique
  groupAdmin      User?     @relation("AdminChats", fields: [groupAdminId], references: [id])
  groupAdminId    Int? 
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  messages        Message[] @relation("ChatMessages")
}